"""add_all_models

Revision ID: b1aca963fe7b
Revises: 
Create Date: 2024-04-07 20:12:43.993561

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'b1aca963fe7b'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('acceptances',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'FINISHED', name='discountstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('percentage', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('IN_ITEM_PICK', 'SENT', 'CANCELED', name='postingstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('cost', sa.DECIMAL(scale=2), nullable=False),
    sa.CheckConstraint('cost >= 0', name='cost_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skus',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('actual_price', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('base_price', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('is_hidden', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('discount_id', sa.UUID(), nullable=True),
    sa.CheckConstraint('actual_price >= 0', name='actual_price_positive'),
    sa.CheckConstraint('base_price >= 0', name='base_price_positive'),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('COMPLETED', 'IN_WORK', 'CANCELED', name='taskstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('type', sa.Enum('PLACING', 'PICKING', name='tasktype'), nullable=False),
    sa.Column('posting_id', sa.UUID(), nullable=True),
    sa.Column('item_id', sa.UUID(), nullable=True),
    sa.Column('acceptance_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['acceptance_id'], ['acceptances.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], use_alter=True),
    sa.ForeignKeyConstraint(['posting_id'], ['postings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sku_id', sa.UUID(), nullable=False),
    sa.Column('posting_id', sa.UUID(), nullable=True),
    sa.Column('acceptance_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['acceptance_id'], ['acceptances.id'], ),
    sa.ForeignKeyConstraint(['posting_id'], ['postings.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['skus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_discounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('BY_DEFECT', 'PROMOTION', name='itemdiscounttype'), nullable=False),
    sa.Column('percentage', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('discount_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['discount_id'], ['discounts.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stocks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('VALID', 'NOT_FOUND', 'DEFECT', name='stockstatus'), nullable=False),
    sa.Column('is_reserved', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stocks')
    op.drop_table('item_discounts')
    op.drop_table('items')
    op.drop_table('tasks')
    op.drop_table('skus')
    op.drop_table('postings')
    op.drop_table('discounts')
    op.drop_table('acceptances')
    # ### end Alembic commands ###
